type Domain @entity {
  id: ID!
  labelName: String
  labelhash: Bytes
  parent: Domain
  subdomains: [Domain!]! @derivedFrom(field: "parent")
  subdomainCount: Int! # todo - doesnt seem in use
  owner: Account!
  resolver: Bytes
  ttl: BigInt
}

type Name @entity {
  labelName: String
  id: ID!
  name: String!
}

type Account @entity {
  id: ID!
  domains: [Domain!]! @derivedFrom(field: "owner")
  domainCount: Int! # todo - doesnt seem in use
}

enum AuctionState {
  AUCTION
  FINALIZED
  RELEASED
  FORBIDDEN
}

type AuctionedName @entity {
  id: ID!
  domain: Domain
  registrationDate: Int!
  releaseDate: Int
  winningBidder: Account
  maxBid: BigInt
  secondBid: BigInt
  bidCount: Int!
  state: AuctionState
}

# todo - is it possible to derive what kind of resolver it is?
type Resolver @entity {
  id: ID!                   # Address of the resolver
  domain: Bytes!            # Domain the resolver is set to
}

interface ResolverEvent {
  id: ID!                   # From field node # Todo - figure out IDs
  resolver: Bytes!          # Address of the resolver that emitted the event
}

# Todo - does this affect entity Domain - to ask ENS
type AddrChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  address: Bytes!
}

# Todo - does this affect entity Domain - to ask ENS
type NameChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  name: String!
}

# todo - do any other events affect domain
type AbiChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  contentType: BigInt!
}

type PubkeyChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  x: Bytes!
  y: Bytes!
}

type TextChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  indexedKey: String!
  key: String!
}

type ContenthashChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  hash: Bytes!
}

type InterfaceChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  interfaceID: Bytes!
  implementer: Bytes!
}

type AuthorisationChanged implements ResolverEvent @entity {
  id: ID!
  resolver: Bytes!
  owner: Bytes!
  target: Bytes!
  isAuthorized: Boolean!
}
