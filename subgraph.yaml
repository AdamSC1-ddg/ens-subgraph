specVersion: 0.0.1
description: A secure & decentralized way to address resources on and off the blockchain using simple, human-readable names. Access domains and transfer history.
repository: https://github.com/graphprotocol/ens-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Registrar
    network: mainnet
    source:
      address: '0x314159265dd8dbb310642f98f50c066173c1259b'
      abi: Registrar
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.2
      language: wasm/assemblyscript
      file: ./src/mappings/registrar.ts
      entities:
        - Domain
        - Resolver
      abis:
        - name: Registrar
          file: ./abis/EtherscanAbi.json
      eventHandlers:
        - event: Transfer(bytes32,address)
          handler: handleTransfer
        - event: NewOwner(bytes32,bytes32,address)
          handler: handleNewOwner
        - event: NewResolver(bytes32,address)
          handler: handleNewResolver
        - event: NewTTL(bytes32,uint64)
          handler: handleNewTTL
    templates:
      - name: Resolver
        kind: ethereum/contract
        network: mainnet
        source:
          abi: Resolver
        mapping:
          kind: ethereum/events
          apiVersion: 0.0.1
          language: wasm/assemblyscript
          file: ./src/mappings/resolver.ts
          entities:
            - Resolver
            - ENSEvent
            - Domain
          abis:
            - name: Resolver
              file: ./abis/PublicResolver.json
          eventHandlers:
            - event: ABIChanged(bytes32,uint256)
              handler: handleABIChanged
            - event: AddrChanged(bytes32,address)
              handler: handleAddrChanged
            - event: AuthorisationChanged(bytes32,address,address,bool)
              handler: handleAuthorisationChanged
            - event: ContenthashChanged(bytes32,bytes)
              handler: handleContentHashChanged
            - event: InterfaceChanged(bytes32,bytes4,address)
              handler: handleInterfaceChanged
            - event: NameChanged(bytes32,string)
              handler: handleNameChanged
            - event: PubkeyChanged(bytes32,bytes32,bytes32)
              handler: handlePubkeyChanged
            - event: TextChanged(bytes32,string,string)
              handler: handleTextChanged